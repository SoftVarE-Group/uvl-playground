version: '3.9'

services:
  traefik:
    image: traefik:v3.0
    ports:
      - 80:80
      - 443:443
      - 30000:30000
      - 3000:3000
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
      #- /var/log:/var/log
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --log.level=INFO
      #- --log.filepath=/var/log/traefik.log
      - --accesslog=true
      #- --accesslog.filepath=/var/log/traefik-access.log
      - --providers.docker.network=proxy
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.ws.address=:30000
      - --entrypoints.configure.address=:3000
      - --entrypoints.ws.http.tls.certresolver=myresolver
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.asDefault=true
      - --entrypoints.websecure.http.tls.certresolver=myresolver
      - --certificatesresolvers.myresolver.acme.email=${EMAIL}
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesResolvers.myresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`${HOSTNAME}`) && (PathPrefix(`/dashboard/`) || PathPrefix(`/api`))
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/

  webserver:
    build:
        context: ./WebSocketClient
        dockerfile: Dockerfile
    restart: on-failure
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webserver.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.services.webserver.loadbalancer.server.port=80"
      
      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.webserver.middlewares=mywwwredirect
      
  languageserver:
    build:
        context: ./WebSocketLanguageServer
        dockerfile: Dockerfile
    hostname: language-server
    restart: on-failure
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.languageserver.entrypoints=ws"
      - "traefik.http.routers.languageserver.rule=Host(`${HOSTNAME}`) && Path(`/`)"
      - "traefik.http.services.languageserver.loadbalancer.server.port=30000"
      - "traefik.http.routers.languageserver.tls.certresolver=myresolver"

      - "traefik.http.routers.configureview.entrypoints=[configure, ws]"
      - "traefik.http.routers.configureview.rule=Host(`${HOSTNAME}`) && PathPrefix(`/create`)"
      - "traefik.http.services.configureview.loadbalancer.server.port=3000"
      - "traefik.http.routers.configureview.tls.certresolver=myresolver"

networks:
  proxy:
    name: proxy

volumes:
  letsencrypt:
    name: letsencrypt
